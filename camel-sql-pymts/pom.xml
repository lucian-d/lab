<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>ld.lab.camel.sql</groupId>
  <artifactId>pymts-dataflow</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Camel SQL routes with Java beans in Karaf</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- dynamic import for the Derby JDBC driver -->
    <camel.osgi.dynamic>*</camel.osgi.dynamic>
    <camel.osgi.import>org.apache.derby.jdbc,*</camel.osgi.import>
  </properties>

  <!-- Control which version of referenced libraries are used
  [when, or if, they are ever referenced]. -->
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-bom</artifactId>
        <version>3.4.0</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
         <groupId>org.apache.camel.karaf</groupId>
         <artifactId>camel-karaf-bom</artifactId>
         <version>3.4.0</version>
         <type>pom</type>
         <scope>import</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Camel -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.karaf</groupId>
      <artifactId>camel-blueprint</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-sql</artifactId>
    </dependency>

    <!-- Derby database and JDBC driver-->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.14.2.0</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.apache.camel.karaf</groupId>
      <artifactId>camel-test-blueprint</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- OSGI hooking-->
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.service.component.annotations</artifactId>
      <version>1.4.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- for using mvn camel:run -->
    <dependency>
      <groupId>org.apache.camel.karaf</groupId>
      <artifactId>camel-blueprint-main</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- to compile the main and test source code  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- to handle the copying of project resources to the output directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- to generate MANIFEST.MF for the bundle -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-bundle-plugin</artifactId>
        <version>3.4.0</version>
        <extensions>false</extensions>
        <configuration>
          <supportIncrementalBuild>true</supportIncrementalBuild>
          <noWarningProjectTypes>pom</noWarningProjectTypes>
          <excludeDependencies>false</excludeDependencies>
          <instructions>
            <Bundle-Name>${project.artifactId}</Bundle-Name>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Import-Package>${camel.osgi.import}</Import-Package>
            <DynamicImport-Package>${camel.osgi.dynamic}</DynamicImport-Package>
            <Private-Package>!*</Private-Package>
            <Implementation-Title>Apache Camel</Implementation-Title>
            <Implementation-Version>${project.version}</Implementation-Version>
            <Karaf-Info>Camel;${project.artifactId}=${project.version}</Karaf-Info>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- to provide the capability to build jars and include MANIFEST.MF in the bundle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>

      <!-- to run the example using mvn camel:run -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-maven-plugin</artifactId>
        <version>3.4.0</version>
      </plugin>

      <!-- to attach features.xml to the package, later used by feature:install to deploy in Karaf -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>target/classes/features.xml</file>
                  <type>xml</type>
                  <classifier>features</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
